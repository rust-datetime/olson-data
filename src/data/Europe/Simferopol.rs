
// ------
// This file is autogenerated!
// Any changes you make may be overwritten.
// ------


use datetime::zoned::zoneinfo::*;
use datetime::zoned::zoneinfo::Saving::*;

#[allow(unused_imports)]
use data::rulesets;

pub const ZONE: Zone<'static> = Zone {
    name: "Europe/Simferopol",
    timespans: &[
        Timespan {
            offset: 8184,
            format: "LMT",
            saving: Saving::NoSaving,
            start_time: None,
            end_time:   Some(-2840140800),
        },
        Timespan {
            offset: 8160,
            format: "SMT",
            saving: Saving::NoSaving,
            start_time: Some(-2840140800),
            end_time:   Some(-1441152000),
        },
        Timespan {
            offset: 7200,
            format: "EET",
            saving: Saving::NoSaving,
            start_time: Some(-1441152000),
            end_time:   Some(-1247529600),
        },
        Timespan {
            offset: 10800,
            format: "MSK",
            saving: Saving::NoSaving,
            start_time: Some(-1247529600),
            end_time:   Some(-888883200),
        },
        Timespan {
            offset: 3600,
            format: "CE%sT",
            saving: Saving::Multiple(&rulesets::C_Eur),
            start_time: Some(-888883200),
            end_time:   Some(-811641600),
        },
        Timespan {
            offset: 10800,
            format: "MSK/MSD",
            saving: Saving::Multiple(&rulesets::Russia),
            start_time: Some(-811641600),
            end_time:   Some(631152000),
        },
        Timespan {
            offset: 10800,
            format: "MSK",
            saving: Saving::NoSaving,
            start_time: Some(631152000),
            end_time:   Some(646797600),
        },
        Timespan {
            offset: 7200,
            format: "EET",
            saving: Saving::NoSaving,
            start_time: Some(646797600),
            end_time:   Some(694224000),
        },
        Timespan {
            offset: 7200,
            format: "EE%sT",
            saving: Saving::Multiple(&rulesets::E_Eur),
            start_time: Some(694224000),
            end_time:   Some(767750400),
        },
        Timespan {
            offset: 10800,
            format: "MSK/MSD",
            saving: Saving::Multiple(&rulesets::E_Eur),
            start_time: Some(767750400),
            end_time:   Some(828230400),
        },
        Timespan {
            offset: 10800,
            format: "MSD",
            saving: Saving::OneOff(3600),
            start_time: Some(828230400),
            end_time:   Some(846385200),
        },
        Timespan {
            offset: 10800,
            format: "MSK/MSD",
            saving: Saving::Multiple(&rulesets::Russia),
            start_time: Some(846385200),
            end_time:   Some(852076800),
        },
        Timespan {
            offset: 10800,
            format: "MSK",
            saving: Saving::NoSaving,
            start_time: Some(852076800),
            end_time:   Some(859683600),
        },
        Timespan {
            offset: 7200,
            format: "EE%sT",
            saving: Saving::Multiple(&rulesets::EU),
            start_time: Some(859683600),
            end_time:   Some(1396144800),
        },
        Timespan {
            offset: 14400,
            format: "MSK",
            saving: Saving::NoSaving,
            start_time: Some(1396144800),
            end_time:   Some(1414288800),
        },
        Timespan {
            offset: 10800,
            format: "MSK",
            saving: Saving::NoSaving,
            start_time: Some(1414288800),
            end_time:   None,
        },
    ],
};


